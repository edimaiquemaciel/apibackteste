version: '3.8'

services:
  # Serviço da nossa aplicação Spring Boot
  backend:
    build: . # Constrói a imagem usando o Dockerfile na pasta atual
    container_name: vortex-backend-app
    ports:
      - "8080:8080" # Mapeia a porta 8080 do container para a porta 8080 da sua máquina
    environment:
      - SPRING_PROFILES_ACTIVE=prod # Ativa o perfil de produção para conectar ao PostgreSQL
    depends_on:
      - postgres-db # Garante que o banco de dados inicie antes da aplicação

  # Serviço do banco de dados PostgreSQL
  postgres-db:
    image: postgres:16-alpine # Usa uma imagem oficial e leve do PostgreSQL
    container_name: vortex-postgres-db
    ports:
      - "5432:5432" # Mapeia a porta do PostgreSQL para sua máquina (útil para debug)
    environment:
      - POSTGRES_USER=postgres # Corresponde ao username no application-prod.properties
      - POSTGRES_PASSWORD=admin123 # Corresponde à senha no application-prod.properties
      - POSTGRES_DB=vortex_db # Corresponde ao nome do banco no application-prod.properties
    volumes:
      - postgres-data:/var/lib/postgresql/data

volumes:
  postgres-data: # Cria um volume para persistir os dados do banco mesmo que o container seja removido